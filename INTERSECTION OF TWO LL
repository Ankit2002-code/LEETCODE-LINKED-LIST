	class Solution {
	public:
	    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
	         int lenA = getLength(headA);
	        int lenB = getLength(headB);
	        // Adjust starting points
	        while (lenA > lenB) {
	            headA = headA->next;
	            lenA--;
	        }
	        while (lenB > lenA) {
	            headB = headB->next;
	            lenB--;
	        }
	        // Traverse both lists until an intersection is found
	        while (headA != nullptr && headB != nullptr && headA != headB) {
	            headA = headA->next;
	            headB = headB->next;
	        }
	        return headA;  // Intersection node or nullptr if no intersection
	    }
	    int getLength(ListNode* head) {
	        int length = 0;
	        while (head != nullptr) {
	            length++;
	            head = head->next;
	        }
	        return length;
	    }
	};
